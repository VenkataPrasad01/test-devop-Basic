# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: GitHub environment with change

# on:
#   push:
#     branches: [ main ]
#    pull_request:
#      branches: [ master ]
#   push:
#     branches:
#       - main
#   pull_request:
#     types: [opened, synchronize, reopened]

on: workflow_dispatch  
    
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
          
  integrationTest:
    needs: build
    name: Integration Tests
    runs-on: ubuntu-latest
    steps:  
      - name: Register Artifact
        uses: ServiceNow/servicenow-devops-register-artifact@main
        with:
          devops-integration-user-name: ${{ secrets.SN_DEVOPS_USER }}
          devops-integration-user-password: ${{ secrets.SN_DEVOPS_PASSWORD }}
          instance-url: ${{ secrets.SN_INSTANCE_URL }}
          tool-id: ${{ secrets.SN_ORCHESTRATION_TOOL_ID }}
          context-github: ${{ toJSON(github) }}
          job-name: 'Integration Tests'
          artifacts: ' [{"name": "com:autoclaim","version": "1.${{ github.run_number }}","semanticVersion": "1.${{ github.run_number }}.0","repositoryName": "${{ github.repository }}"}]'

      - name: Register Package
        uses: ServiceNow/servicenow-devops-register-package@main
        with:
          devops-integration-user-name: ${{ secrets.SN_DEVOPS_USER }}
          devops-integration-user-password: ${{ secrets.SN_DEVOPS_PASSWORD }}
          instance-url: ${{ secrets.SN_INSTANCE_URL }}
          tool-id: ${{ secrets.SN_ORCHESTRATION_TOOL_ID }}
          context-github: ${{ toJSON(github) }}
          job-name: 'Integration Tests'
          artifacts: ' [{"name": "com:autoclaim","version": "1.${{ github.run_number }}","semanticVersion": "1.${{ github.run_number }}.0","repositoryName": "${{ github.repository }}"}]'
          package-name: 'autoclaim.war'
  deploy:
     name: Deploy
     needs: integrationTest
     runs-on: ubuntu-latest
     steps:
     - name: ServiceNow DevOps Change Automation
       uses: ServiceNow/servicenow-devops-change@dev
       with:
        instance-url: '${{ secrets.SN_INSTANCE_URL }}'
        devops-integration-user-name: '${{ secrets.SN_DEVOPS_USER }}'
        devops-integration-user-password: '${{ secrets.SN_DEVOPS_PASSWORD }}'
        tool-id: '${{ secrets.SN_ORCHESTRATION_TOOL_ID }}'
        job-name: Deploy
        context-github: '${{ toJSON(github) }}'
        timeout: 3600
        interval: 100
        change-request: >-
          { "setCloseCode": "true", "attributes": { "short_description":
          "Automated Software Deployment", "chg_model":
          "adffaa9e4370211072b7f6be5bb8f2ed", "description": "Automated Software
          Deployment.", "assignment_group": "a715cd759f2002002920bde8132e7018",
          "implementation_plan": "Software update is tested and results can be
          found in Test Summaries Tab.", "backout_plan": "When software fails in
          production, the previous software release will be re-deployed.",
          "test_plan": "Testing if the software was successfully deployed" } }
          
  postdeploy:
        #if: github.event.pull_request.merged == true
        name: Post Deploy
        needs: deploy
        runs-on: ubuntu-latest
        steps:
            - name: Run deployment scripts
              run: echo Completed Deployment 
          
          
        
