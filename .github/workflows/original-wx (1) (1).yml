# Testing Webhooks

name: wx

on:
  push:
    branches: ['master']
  workflow_dispatch:
    inputs:
      tag:
        description: 'Git tag'
        required: true
        default: 'v3.6.8'

jobs:
  build:
    name: Build
    strategy:
      matrix:
        environments: [{ environment: dev, project_number: 156373064713 }, { environment: test, project_number: 425985732847 }, { environment: uat, project_number: 401655566443 }, { environment: prod, project_number: 238996678094 }]
        node-version: [12.18.3]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    environment: ${{ matrix.environments.environment }}

    steps:
      - run: echo "üêß Now Running Change Automation"
      - name: ServiceNow DevOps Change Automation
        if: matrix.environments.environment == 'dev'
        uses: ServiceNow/servicenow-devops-change@v1.38.0
        with:
          devops-integration-user-name: 'devops.integration.user'
          devops-integration-user-password: 'Testing1!'
          instance-url: 'hhttps://venkata1.service-now.com/'
          tool-id: '30008a6c93ddf110e0e83cb19dba10ff'
          context-github: ${{ toJSON(github) }}
          job-name: 'Build (${{ matrix.environments.environment }}, ${{ matrix.environments.project_number }}, ${{ matrix.node-version }})'
                   change-request: '{
                     "setCloseCode":true,
                      "attributes": {
                          "short_description": "Automated Software Deployment",
                          "description": "Automated Software Deployment.",
                          "assignment_group": "a715cd759f2002002920bde8132e7018",
                          "implementation_plan": "Software update is tested and results can be found in Test Summaries Tab.",
                          "backout_plan": "When software fails in production, the previous software release will be re-deployed.",
                          "close_notes":"Testing sample close notes",
                          "test_plan": "Testing if the software was successfully deployed"
                      }
                   
                  }'
          interval: '100'
          timeout: '3600'
          changeCreationTimeOut: '3600'
          abortOnChangeCreationFailure: true
          abortOnChangeStepTimeout: true
